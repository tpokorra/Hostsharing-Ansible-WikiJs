---
- hosts: wikijs
  become_user: "{{pac}}-{{user}}"
  vars:
    ansible_python_interpreter: /usr/bin/python3
    # see https://docs.ansible.com/ansible/latest/user_guide/become.html#risks-of-becoming-an-unprivileged-user
    ansible_common_remote_group: "{{pac}}"
    ansible_remote_tmp: ~/.ansible/tmp

  tasks:
  # see separate playbook-init.yml; we need postgresql extension pg_trgm
  #- name: Create user, domain and database
  #  import_tasks: tasks/hs_basis.yml

  #################################
  # check for postgresql extension
  #################################
  - name: upload the password for the postgresql database
    become: yes
    template:
      src: "templates/pgpass"
      dest: "/home/pacs/{{pac}}/users/{{user}}/.pgpass"
      mode: "700"

  - name: check for pg_trgm
    become: yes
    shell: |
        export ext="pg_trgm"
        psql --user {{pac}}_{{db_user}} -c "SELECT * FROM pg_extension where extname = '$ext'" | grep "$ext" || exit -1
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/"

  #################################
  ## create directories
  #################################
  - name: create directory bin
    become: yes
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/bin"
      state: directory
  - name: create directory etc
    become: yes
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/etc"
      state: directory
  - name: create directory var/tmp
    become: yes
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/var/tmp"
      state: directory
  - name: create directory var/log
    become: yes
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/var/log"
      state: directory
  - name: create directory var/run
    become: yes
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/var/run"
      state: directory

  #################################
  ## install requirements
  #################################
  - name: Install node.js
    import_tasks: tasks/hs_nodejs.yml

  ##################################
  ## install Wiki.js
  ##################################
  - name: create directory wikijs
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/wikijs"
      state: directory

  - name: install Wiki.js
    become: yes
    become_user: "{{pac}}-{{user}}"
    unarchive:
      src: https://github.com/requarks/wiki/releases/download/v{{wikijs_release}}/wiki-js.tar.gz
      remote_src: yes
      dest: /home/pacs/{{pac}}/users/{{user}}/wikijs
      creates: /home/pacs/{{pac}}/users/{{user}}/wikijs/config.sample.yml

  ##################################
  ## configuration
  ##################################

  - name: upload the config file
    become: yes
    template:
      src: "templates/config.yml"
      dest: "/home/pacs/{{pac}}/users/{{user}}/wikijs/config.yml"

  ######################
  ## initialise instance
  ######################

  # TODO

  ########################
  ## setup the apache site
  ########################
  - name: upload htdocs-ssl htaccess file
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/htdocs-ssl/.htaccess" src="templates/htaccess"


  ##################################
  ## other software configuration
  ##################################
  - name: upload monit configuration
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/.monitrc" src="templates/monitrc" mode=0600 force=no

  - name: upload start script
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/bin/start-wikijs.sh" src="templates/start-wikijs.sh" mode=0700
  - name: upload stop script
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/bin/stop-wikijs.sh" src="templates/stop-wikijs.sh" mode=0700

  - name: upload logrotate configuration
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/.logrotate" src="templates/logrotate" mode=0600 force=no

  ####################################
  ## install cron jobs
  ####################################
  - name: start monit as cronjob
    become: yes
    become_user: "{{pac}}-{{user}}"
    cron:
      name: "start monit at reboot"
      special_time: reboot
      job: rm -f $HOME/var/run/* && /usr/bin/monit -c "$HOME/.monitrc"

  - name: run logrotate once a day
    become: yes
    become_user: "{{pac}}-{{user}}"
    cron:
      name: "logrotate"
      minute: "27"
      hour: "1"
      job: "/usr/sbin/logrotate -s $HOME/.logrotate.state $HOME/.logrotate"

  ##############################################
  ## start services via monit
  ##############################################
  - name: start monit
    become: yes
    become_user: "{{pac}}-{{user}}"
    shell: |
      /usr/bin/monit -c ".monitrc"
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/"
      creates: "/home/pacs/{{pac}}/users/{{user}}/var/run/monit.id"
